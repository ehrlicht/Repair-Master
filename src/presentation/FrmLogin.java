package presentation;

import base.UserDao;
import domaine.User;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.border.Border;

/**
 *
 * @author Thery Ehrlich
 * 
 * Information d'ordre général : 
 * Les methodes keyPressed, keyReleased, focusGained et focusLost gèrent pour chaque champ 
 * le placement et la suppression des placeholders qui sont gérés par une classe 
 * centrale PlaceholderControl.java
 */
public class FrmLogin extends javax.swing.JFrame {

    private static final String LASTNAME_PLACEHOLDER = "Nom";
    private static final String FIRSTNAME_PLACEHOLDER = "Prénom";
    private static final String EMAIL_PLACEHOLDER = "Email";
    private static final String NEW_USER_PLACEHOLDER = "Nom d'utilisateur souhaité";
    private static final String NEW_PASSWORD_PLACEHOLDER = "Mot de passe souhaité";
    private static final String USER_PLACEHOLDER = "Nom d'utilisateur";
    private static final String PASSWORD_PLACEHOLDER = "Mot de passe";
    private static final String CONF_PASSWORD_PLACEHOLDER = "Confirmer le mot de passe";
    private static final String EMAIL_DOMAIN = "@etu.hesge.ch";
    private static final String ERRORS_FOUND = "Certains champs n'ont pas étés correctement saisis.";
    private static final String MANAGER_ROLE = "Manager";
    private static final String TECHNICIAN_ROLE = "Technicien";
    private static final String NO_ROLE = "Aucun";
    private final FrmAdmin frmAdmin = new FrmAdmin(this);
    private final ArrayList lstRejectedUsers = new ArrayList();

    /**
     * Creates new form FrmLogin
     */
    public FrmLogin() {
        initComponents();
        tfPassword.setEchoChar((char) 0);
        tfNewPassword.setEchoChar((char) 0);
        tfConfirmPassword.setEchoChar((char) 0);
        lblMaster.requestFocusInWindow();
        displayLoginPanel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLogin = new javax.swing.JPanel();
        tfUsername = new javax.swing.JTextField();
        tfPassword = new javax.swing.JPasswordField();
        pnlTitle = new javax.swing.JPanel();
        lblRepair = new javax.swing.JLabel();
        lblMaster = new javax.swing.JLabel();
        pnlButtons = new javax.swing.JPanel();
        btnLogin = new javax.swing.JButton();
        btnQuit = new javax.swing.JButton();
        btnInscrire = new javax.swing.JButton();
        pnlSignup = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        tfNom = new javax.swing.JTextField();
        tfPrenom = new javax.swing.JTextField();
        tfMail = new javax.swing.JTextField();
        tfNewUsername = new javax.swing.JTextField();
        tfNewPassword = new javax.swing.JPasswordField();
        tfConfirmPassword = new javax.swing.JPasswordField();
        lblMessage = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");
        setLocation(new java.awt.Point(700, 400));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        pnlLogin.setMaximumSize(new java.awt.Dimension(421, 255));
        pnlLogin.setMinimumSize(new java.awt.Dimension(421, 255));

        tfUsername.setForeground(java.awt.Color.gray);
        tfUsername.setText("Nom d'utilisateur");
        tfUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfUsernameFocusGained(evt);
            }
        });
        tfUsername.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfUsernameMouseClicked(evt);
            }
        });
        tfUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfUsernameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfUsernameKeyReleased(evt);
            }
        });

        tfPassword.setForeground(java.awt.Color.gray);
        tfPassword.setText("Mot de passe");
        tfPassword.setToolTipText("");
        tfPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfPasswordFocusLost(evt);
            }
        });
        tfPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfPasswordMouseClicked(evt);
            }
        });
        tfPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPasswordKeyPressed(evt);
            }
        });

        lblRepair.setFont(new java.awt.Font("Helvetica Neue", 0, 41)); // NOI18N
        lblRepair.setText("Repair");

        lblMaster.setFont(new java.awt.Font("Helvetica Neue", 0, 41)); // NOI18N
        lblMaster.setForeground(new java.awt.Color(0, 102, 255));
        lblMaster.setText("Master");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRepair)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMaster)
                .addContainerGap())
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaster)
                    .addComponent(lblRepair, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        btnLogin.setMnemonic('i');
        btnLogin.setText("S'identifier");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnQuit.setMnemonic('q');
        btnQuit.setText("Quitter");
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        btnInscrire.setMnemonic('d');
        btnInscrire.setText("Demander accès");
        btnInscrire.setToolTipText("Cliquez pour envoyer une demande d'accès à votre manager.");
        btnInscrire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscrireActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnLogin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInscrire)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuit))
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnQuit)
                    .addComponent(btnInscrire))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(pnlTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        getContentPane().add(pnlLogin, "card2");

        pnlSignup.setMaximumSize(new java.awt.Dimension(421, 300));
        pnlSignup.setMinimumSize(new java.awt.Dimension(421, 255));
        pnlSignup.setPreferredSize(new java.awt.Dimension(478, 321));

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Formulaire de demande d'accès");

        tfNom.setForeground(new java.awt.Color(153, 153, 153));
        tfNom.setText("Nom");
        tfNom.setToolTipText("");
        tfNom.setMinimumSize(new java.awt.Dimension(177, 26));
        tfNom.setPreferredSize(new java.awt.Dimension(177, 26));
        tfNom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNomFocusGained(evt);
            }
        });
        tfNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNomKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNomKeyReleased(evt);
            }
        });

        tfPrenom.setForeground(new java.awt.Color(153, 153, 153));
        tfPrenom.setText("Prénom");
        tfPrenom.setToolTipText("");
        tfPrenom.setMinimumSize(new java.awt.Dimension(177, 26));
        tfPrenom.setPreferredSize(new java.awt.Dimension(177, 26));
        tfPrenom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfPrenomFocusGained(evt);
            }
        });
        tfPrenom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPrenomKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPrenomKeyReleased(evt);
            }
        });

        tfMail.setForeground(new java.awt.Color(153, 153, 153));
        tfMail.setText("Email");
        tfMail.setMinimumSize(new java.awt.Dimension(177, 26));
        tfMail.setPreferredSize(new java.awt.Dimension(177, 26));
        tfMail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfMailFocusGained(evt);
            }
        });
        tfMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfMailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfMailKeyReleased(evt);
            }
        });

        tfNewUsername.setForeground(new java.awt.Color(153, 153, 153));
        tfNewUsername.setText("Nom d'utilisateur souhaité");
        tfNewUsername.setToolTipText("");
        tfNewUsername.setMinimumSize(new java.awt.Dimension(177, 26));
        tfNewUsername.setPreferredSize(new java.awt.Dimension(177, 26));
        tfNewUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNewUsernameFocusGained(evt);
            }
        });
        tfNewUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNewUsernameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNewUsernameKeyReleased(evt);
            }
        });

        tfNewPassword.setForeground(new java.awt.Color(153, 153, 153));
        tfNewPassword.setText("Mot de passe souhaité");
        tfNewPassword.setToolTipText("Quatres mots qui n'ont rien à voir les uns de autres.");
        tfNewPassword.setMinimumSize(new java.awt.Dimension(177, 26));
        tfNewPassword.setPreferredSize(new java.awt.Dimension(177, 26));
        tfNewPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNewPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNewPasswordFocusLost(evt);
            }
        });

        tfConfirmPassword.setForeground(new java.awt.Color(153, 153, 153));
        tfConfirmPassword.setText("Confirmer le mot de passe");
        tfConfirmPassword.setToolTipText("");
        tfConfirmPassword.setPreferredSize(new java.awt.Dimension(177, 26));
        tfConfirmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfConfirmPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfConfirmPasswordFocusLost(evt);
            }
        });

        lblMessage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMessage.setForeground(new java.awt.Color(255, 0, 0));
        lblMessage.setText("Certains champs n'ont pas étés correctement saisis.");
        lblMessage.setToolTipText("");
        lblMessage.setFocusable(false);

        btnSend.setMnemonic('e');
        btnSend.setText("Envoyer la demande");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnCancel.setMnemonic('a');
        btnCancel.setText("Annuler");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSignupLayout = new javax.swing.GroupLayout(pnlSignup);
        pnlSignup.setLayout(pnlSignupLayout);
        pnlSignupLayout.setHorizontalGroup(
            pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSignupLayout.createSequentialGroup()
                .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSignupLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(tfMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNewUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                            .addGroup(pnlSignupLayout.createSequentialGroup()
                                .addComponent(btnSend)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel))
                            .addComponent(tfNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfNom, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89))
                    .addGroup(pnlSignupLayout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlSignupLayout.setVerticalGroup(
            pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSignupLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfNom, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfMail, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfNewUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(lblMessage)
                .addGap(11, 11, 11)
                .addGroup(pnlSignupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSend)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        getContentPane().add(pnlSignup, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /* Controle si une demande d'identification est valide ou non et agit en conséquence 
     * s'il s'agit d'un manager, d'un utilisateur ou d'une demandeur d'accès.
     */
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        for (int i = 0; i < lstRejectedUsers.size(); i++) {
            User ru = (User) lstRejectedUsers.get(i);
            if (tfUsername.getText().equals(ru.getUsername())) {
                JOptionPane.showMessageDialog(new JFrame(), "Votre demande a été rejetée !", "", JOptionPane.ERROR_MESSAGE);
                break;
            }
        }
        String securePwd = hashPwd(tfPassword.getText());
        User regUser = new User("", "", "");
        try {
            regUser = UserDao.getCredentials(tfUsername.getText(), securePwd);
        } catch (SQLException e) {
            tfPassword.setText("");
            tfPassword.requestFocusInWindow();
            JOptionPane.showMessageDialog(new JFrame(), "Les données saisies sont erronées. Veuillez ressayer.", "", JOptionPane.WARNING_MESSAGE);
        }
        if (tfUsername.getText().equals(regUser.getUsername()) && securePwd.equals(regUser.getPassword())) {
            if (regUser.getRole().equals(MANAGER_ROLE)) {
                this.dispose();
                DiaAdminChoice diaAdminChoice = new DiaAdminChoice(this, true);
                diaAdminChoice.setParent(this);
                diaAdminChoice.setVisible(true);
            }
            if (regUser.getRole().equals(TECHNICIAN_ROLE)) {
                new FrmMain().setVisible(true);
                this.dispose();
            }
            if (regUser.getRole().equals(NO_ROLE)) {
                tfUsername.setText("");
                tfPassword.setText("");
                tfPassword.requestFocusInWindow();
                JOptionPane.showMessageDialog(new JFrame(), "Ce compte est toujours en cours de validation. Veuillez ressayer plus tard.", "", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnInscrireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscrireActionPerformed
        displaySignupPanel();
    }//GEN-LAST:event_btnInscrireActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if (validateSignupData()) {
            String securePwd = hashPwd(tfNewPassword.getText());
            frmAdmin.addUserRequest(new User(tfPrenom.getText(), tfNom.getText(), tfMail.getText(), tfNewUsername.getText(), securePwd));
            JOptionPane.showMessageDialog(new JFrame(), "La demande a été envoyée.\nSi la demande aboutit, vous pourrez accèder à \nl'application d'ici quelques minutes.", "", INFORMATION_MESSAGE);
            tfNom.setText("");
            tfPrenom.setText("");
            tfMail.setText("");
            tfNewUsername.setText("");
            tfNewPassword.setText("");
            tfConfirmPassword.setText("");
            displayLoginPanel();
        } else {
            lblMessage.setText(ERRORS_FOUND);
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void tfUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfUsernameFocusGained
        if (tfUsername.getText().equals(USER_PLACEHOLDER)) {
            tfUsername.setCaretPosition(0);
        }
    }//GEN-LAST:event_tfUsernameFocusGained

    private void tfPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPasswordFocusGained
        tfPassword.setEchoChar('\u25cf');
        PlaceholderControl.removePlaceHolder(tfPassword, PASSWORD_PLACEHOLDER);
    }//GEN-LAST:event_tfPasswordFocusGained

    private void tfPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPasswordFocusLost
        if (tfPassword.getText().length() < 1) {
            tfPassword.setEchoChar((char) 0);
            PlaceholderControl.addPlaceHolder(tfPassword, PASSWORD_PLACEHOLDER);
        }

    }//GEN-LAST:event_tfPasswordFocusLost

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        displayLoginPanel();
        tfNom.setText("");
        tfPrenom.setText("");
        tfMail.setText("");
        tfNewUsername.setText("");
        tfNewPassword.setText("");
        tfConfirmPassword.setText("");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnQuitActionPerformed

    private void tfPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPasswordKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnLogin.doClick();
        }
    }//GEN-LAST:event_tfPasswordKeyPressed

    private void tfPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfPasswordMouseClicked
        if (tfPassword.getText().equals(PASSWORD_PLACEHOLDER)) {
            tfPassword.setCaretPosition(0);
        }
    }//GEN-LAST:event_tfPasswordMouseClicked

    private void tfUsernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfUsernameMouseClicked
        if (tfUsername.getText().equals(USER_PLACEHOLDER)) {
            tfUsername.setCaretPosition(0);
        }
    }//GEN-LAST:event_tfUsernameMouseClicked

    private void tfUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsernameKeyPressed
        PlaceholderControl.controlPlaceHolder(evt, tfUsername, USER_PLACEHOLDER);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnLogin.doClick();
        }
    }//GEN-LAST:event_tfUsernameKeyPressed

    private void tfUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsernameKeyReleased
        PlaceholderControl.setKeyRelease(tfUsername, USER_PLACEHOLDER);
    }//GEN-LAST:event_tfUsernameKeyReleased

    private void tfConfirmPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfConfirmPasswordFocusLost
        if (tfConfirmPassword.getText().length() < 1) {
            tfConfirmPassword.setEchoChar((char) 0);
            PlaceholderControl.addPlaceHolder(tfConfirmPassword, CONF_PASSWORD_PLACEHOLDER);
        }
    }//GEN-LAST:event_tfConfirmPasswordFocusLost

    private void tfConfirmPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfConfirmPasswordFocusGained
        tfConfirmPassword.setEchoChar('\u25cf');
        PlaceholderControl.removePlaceHolder(tfConfirmPassword, CONF_PASSWORD_PLACEHOLDER);
    }//GEN-LAST:event_tfConfirmPasswordFocusGained

    private void tfNewPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNewPasswordFocusLost
        if (tfNewPassword.getText().length() < 1) {
            tfNewPassword.setEchoChar((char) 0);
            PlaceholderControl.addPlaceHolder(tfNewPassword, NEW_PASSWORD_PLACEHOLDER);
        }
    }//GEN-LAST:event_tfNewPasswordFocusLost

    private void tfNewPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNewPasswordFocusGained
        tfNewPassword.setEchoChar('\u25cf');
        PlaceholderControl.removePlaceHolder(tfNewPassword, NEW_PASSWORD_PLACEHOLDER);
    }//GEN-LAST:event_tfNewPasswordFocusGained

    private void tfNomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomFocusGained
        tfNom.setCaretPosition(0);
    }//GEN-LAST:event_tfNomFocusGained

    private void tfPrenomFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfPrenomFocusGained
        tfPrenom.setCaretPosition(0);
    }//GEN-LAST:event_tfPrenomFocusGained

    private void tfMailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfMailFocusGained
        tfMail.setCaretPosition(0);
    }//GEN-LAST:event_tfMailFocusGained

    private void tfNewUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNewUsernameFocusGained
        tfNewUsername.setCaretPosition(0);
    }//GEN-LAST:event_tfNewUsernameFocusGained

    private void tfNomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomKeyPressed
        PlaceholderControl.controlPlaceHolder(evt, tfNom, LASTNAME_PLACEHOLDER);
    }//GEN-LAST:event_tfNomKeyPressed

    private void tfPrenomKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrenomKeyPressed
        PlaceholderControl.controlPlaceHolder(evt, tfPrenom, FIRSTNAME_PLACEHOLDER);
    }//GEN-LAST:event_tfPrenomKeyPressed

    private void tfMailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMailKeyPressed
        PlaceholderControl.controlPlaceHolder(evt, tfMail, EMAIL_PLACEHOLDER);
    }//GEN-LAST:event_tfMailKeyPressed

    private void tfNewUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNewUsernameKeyPressed
        PlaceholderControl.controlPlaceHolder(evt, tfNewUsername, NEW_USER_PLACEHOLDER);
    }//GEN-LAST:event_tfNewUsernameKeyPressed

    private void tfNomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomKeyReleased
        PlaceholderControl.setKeyRelease(tfNom, LASTNAME_PLACEHOLDER);
    }//GEN-LAST:event_tfNomKeyReleased

    private void tfPrenomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrenomKeyReleased
        PlaceholderControl.setKeyRelease(tfPrenom, FIRSTNAME_PLACEHOLDER);
    }//GEN-LAST:event_tfPrenomKeyReleased

    private void tfMailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfMailKeyReleased
        PlaceholderControl.setKeyRelease(tfMail, EMAIL_PLACEHOLDER);
    }//GEN-LAST:event_tfMailKeyReleased

    private void tfNewUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNewUsernameKeyReleased
        PlaceholderControl.setKeyRelease(tfNewUsername, NEW_USER_PLACEHOLDER);
    }//GEN-LAST:event_tfNewUsernameKeyReleased

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnInscrire;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnQuit;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel lblMaster;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblRepair;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlSignup;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JPasswordField tfConfirmPassword;
    private javax.swing.JTextField tfMail;
    private javax.swing.JPasswordField tfNewPassword;
    private javax.swing.JTextField tfNewUsername;
    private javax.swing.JTextField tfNom;
    private javax.swing.JPasswordField tfPassword;
    private javax.swing.JTextField tfPrenom;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    /* Gère l'affichage d'alertes dans les cas ou les champs ne sont pas 
     * correctement remplis 
     */
    private boolean validateSignupData() {
        Border errordBdr = BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 5, Color.red), BorderFactory.createEmptyBorder(2, 2, 2, 2));
        Border correctBdr = BorderFactory.createCompoundBorder(BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)), BorderFactory.createEmptyBorder(2, 2, 2, 2));
        boolean isValid = true;

        if (tfNom.getText().equals(LASTNAME_PLACEHOLDER) || tfNom.getText().length() == 0) {
            tfNom.setBorder(errordBdr);
            isValid = false;
        } else {
            tfNom.setBorder(correctBdr);
        }
        if (tfPrenom.getText().equals(FIRSTNAME_PLACEHOLDER) || tfPrenom.getText().length() == 0) {
            tfPrenom.setBorder(errordBdr);
            isValid = false;
        } else {
            tfPrenom.setBorder(correctBdr);
        }
        if (!tfMail.getText().contains(EMAIL_DOMAIN) || tfMail.getText().contains(" ")) {
            tfMail.setBorder(errordBdr);
            isValid = false;
        } else {
            tfMail.setBorder(correctBdr);
        }
        if (tfNewUsername.getText().equals(NEW_USER_PLACEHOLDER) || tfNewUsername.getText().contains(" ") || tfNewUsername.getText().length() == 0) {
            tfNewUsername.setBorder(errordBdr);
            isValid = false;
        } else {
            tfNewUsername.setBorder(correctBdr);
        }
        if (!tfNewPassword.getText().equals(tfConfirmPassword.getText())) {
            tfNewPassword.setBorder(errordBdr);
            tfConfirmPassword.setBorder(errordBdr);
            isValid = false;
        } else {
            tfNewPassword.setBorder(correctBdr);
            tfConfirmPassword.setBorder(correctBdr);
        }
        return isValid;
    }

    //Gère l'affichage du login panel
    private void displayLoginPanel() {
        pnlSignup.setEnabled(false);
        pnlSignup.setVisible(false);
        btnCancel.setEnabled(false);
        btnCancel.setVisible(false);
        btnSend.setEnabled(false);
        btnSend.setVisible(false);
        tfNom.setVisible(false);
        tfNom.setEnabled(false);
        tfPrenom.setVisible(false);
        tfPrenom.setEnabled(false);
        tfMail.setVisible(false);
        tfMail.setEnabled(false);
        tfNewUsername.setVisible(false);
        tfNewUsername.setEnabled(false);
        tfNewPassword.setVisible(false);
        tfNewPassword.setEnabled(false);
        tfConfirmPassword.setVisible(false);
        tfConfirmPassword.setEnabled(false);
        pnlLogin.setEnabled(true);
        pnlLogin.setVisible(true);
        btnLogin.setEnabled(true);
        btnLogin.setVisible(true);
        btnInscrire.setEnabled(true);
        btnInscrire.setVisible(true);
        tfUsername.setEnabled(true);
        tfUsername.setVisible(true);
        tfPassword.setEnabled(true);
        tfPassword.setVisible(true);
        lblMessage.setText(" ");
        tfUsername.requestFocusInWindow();
    }

    //Gère l'affichage du panel de demande d'accès 
    private void displaySignupPanel() {
        lblTitle.requestFocus();
        tfUsername.setVisible(false);
        tfUsername.setEnabled(false);
        tfPassword.setVisible(false);
        tfPassword.setEnabled(false);
        pnlLogin.setVisible(false);
        btnLogin.setEnabled(false);
        btnLogin.setVisible(false);
        btnInscrire.setEnabled(false);
        btnInscrire.setVisible(false);
        lblMessage.setText(" ");
        pnlSignup.setVisible(true);
        btnCancel.setEnabled(true);
        btnCancel.setVisible(true);
        btnSend.setEnabled(true);
        btnSend.setVisible(true);
        tfNom.setVisible(true);
        tfNom.setEnabled(true);
        PlaceholderControl.addPlaceHolder(tfNom, LASTNAME_PLACEHOLDER);
        tfPrenom.setVisible(true);
        tfPrenom.setEnabled(true);
        PlaceholderControl.addPlaceHolder(tfPrenom, FIRSTNAME_PLACEHOLDER);
        tfMail.setVisible(true);
        tfMail.setEnabled(true);
        PlaceholderControl.addPlaceHolder(tfMail, EMAIL_PLACEHOLDER);
        tfNewUsername.setVisible(true);
        tfNewUsername.setEnabled(true);
        PlaceholderControl.addPlaceHolder(tfNewUsername, NEW_USER_PLACEHOLDER);
        tfNewPassword.setVisible(true);
        tfNewPassword.setEnabled(true);
        tfNewPassword.setEchoChar((char) 0);
        PlaceholderControl.addPlaceHolder(tfNewPassword, NEW_PASSWORD_PLACEHOLDER);
        tfConfirmPassword.setVisible(true);
        tfConfirmPassword.setEnabled(true);
        tfConfirmPassword.setEchoChar((char) 0);
        PlaceholderControl.addPlaceHolder(tfConfirmPassword, CONF_PASSWORD_PLACEHOLDER);
    }

    protected void addRejectedUser(User u) {
        lstRejectedUsers.add(u);
    }

    //Methode de hashage du mot de passe
    private String hashPwd(String pwdToHash) {
        String securePwd = null;
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update(pwdToHash.getBytes());
            byte[] bytes = md.digest();
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < bytes.length; i++) {
                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));
            }
            securePwd = sb.toString();
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        System.out.println(securePwd);
        return securePwd;
    }

}
