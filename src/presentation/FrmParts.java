package presentation;

import base.RepairDao;
import domaine.Part;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thery Ehrlich
 */
public class FrmParts extends javax.swing.JFrame {

    private ArrayList<Part> partList = new ArrayList<>();
    ArrayList<Part> partsAdded = new ArrayList<>();
    private DefaultTableModel partAvailModel;
    private DefaultTableModel partAddedModel;

    /**
     * Creates new form FrmParts
     */
    FrmMain frmMain;

    public FrmParts(FrmMain frmMain) {
        this.frmMain = frmMain;
        initComponents();
        partAvailModel = (DefaultTableModel) tblStockAvail.getModel();
        partAddedModel = (DefaultTableModel) tblStockAdded.getModel();
        loadParts();
        displayParts();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblPartsToAdd = new javax.swing.JLabel();
        lblPartsInStock = new javax.swing.JLabel();
        scpStockAvail = new javax.swing.JScrollPane();
        tblStockAvail = new javax.swing.JTable();
        scpStockAdded = new javax.swing.JScrollPane();
        tblStockAdded = new javax.swing.JTable();
        mnuParts = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileAdd = new javax.swing.JMenuItem();
        mnuFileCancel = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Allocation des pièces");
        setAlwaysOnTop(true);
        setLocation(new java.awt.Point(700, 400));
        setMinimumSize(new java.awt.Dimension(600, 354));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnAdd.setMnemonic('e');
        btnAdd.setText("Enregistrer");
        btnAdd.setEnabled(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnCancel.setMnemonic('n');
        btnCancel.setText("Annuler");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblPartsToAdd.setFont(new java.awt.Font("PingFang HK", 1, 18)); // NOI18N
        lblPartsToAdd.setText("Pièces à ajouter");

        lblPartsInStock.setFont(new java.awt.Font("PingFang HK", 1, 18)); // NOI18N
        lblPartsInStock.setText("Pièces en stock");

        tblStockAvail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description", "Prix", "Stock dispo."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStockAvail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStockAvailMouseClicked(evt);
            }
        });
        scpStockAvail.setViewportView(tblStockAvail);
        if (tblStockAvail.getColumnModel().getColumnCount() > 0) {
            tblStockAvail.getColumnModel().getColumn(0).setPreferredWidth(400);
            tblStockAvail.getColumnModel().getColumn(1).setPreferredWidth(50);
        }

        scpStockAdded.setPreferredSize(new java.awt.Dimension(20, 20));

        tblStockAdded.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description", "Prix", "Stock dispo."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStockAdded.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStockAddedMouseClicked(evt);
            }
        });
        scpStockAdded.setViewportView(tblStockAdded);
        if (tblStockAdded.getColumnModel().getColumnCount() > 0) {
            tblStockAdded.getColumnModel().getColumn(0).setPreferredWidth(400);
            tblStockAdded.getColumnModel().getColumn(1).setPreferredWidth(50);
        }

        mnuFile.setMnemonic('f');
        mnuFile.setText("Fichier");

        mnuFileAdd.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
        mnuFileAdd.setMnemonic('e');
        mnuFileAdd.setText("Enregistrer");
        mnuFileAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileAddActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileAdd);

        mnuFileCancel.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        mnuFileCancel.setMnemonic('n');
        mnuFileCancel.setText("Annuler");
        mnuFileCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileCancelActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileCancel);

        mnuParts.add(mnuFile);

        setJMenuBar(mnuParts);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPartsToAdd)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPartsInStock)
                                .addGap(0, 432, Short.MAX_VALUE))
                            .addComponent(scpStockAvail)
                            .addComponent(scpStockAdded, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblPartsInStock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scpStockAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPartsToAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scpStockAdded, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnAdd))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void mnuFileAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileAddActionPerformed
        btnAdd.doClick();
    }//GEN-LAST:event_mnuFileAddActionPerformed

    private void mnuFileCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileCancelActionPerformed
        dispose();
    }//GEN-LAST:event_mnuFileCancelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        dispose();
    }//GEN-LAST:event_btnAddActionPerformed

    /* Gère le transfert et l'ajustement du nombre de stock d'une pièce ajoutée
    *  à la liste de pièces ajoutées.
    */ 
    private void tblStockAvailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStockAvailMouseClicked
        int index = tblStockAvail.getSelectedRow();
        Part p = partList.get(index);
        if (evt.getClickCount() == 2) {
            p.setStock(p.getStock() - 1);
            if (p.getStock() > 0) {
                int ind = -1;
                for (int i = 0; i < partAddedModel.getRowCount(); i++) {
                    if (p.getDesc().equals(partAddedModel.getValueAt(i, 0))) {
                        ind = i;
                        break;
                    }
                }
                if (ind == -1) {
                    partAddedModel.addRow(new Object[]{p.getDesc(), p.getPrice(), p.getStock()});
                } else {
                    partAddedModel.setValueAt(p.getStock(), ind, 2);
                }
            } else {
                partAvailModel.removeRow(index);
                partsAdded.add(p);
                partList.remove(index);
                DiaOrderMore d = new DiaOrderMore(this, true);
                d.setVisible(true);
            }
        }
        displayParts();
        btnAdd.setEnabled(true);
    }//GEN-LAST:event_tblStockAvailMouseClicked

    /* Gère le transfert et l'ajustement du nombre de stock d'une pièce ajoutée
    *  à la liste de pièces disponibles (à développer).
    */ 
    private void tblStockAddedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStockAddedMouseClicked
        int index = tblStockAdded.getSelectedRow();
        Part p = partList.get(index);
        if (evt.getClickCount() == 2) {
            if (p.getStock() > 0) {
                p.setStock(p.getStock() + 1);
                int ind = -1;
                for (int i = 0; i < partAvailModel.getRowCount(); i++) {
                    if (p.getDesc().equals(partAvailModel.getValueAt(i, 0))) {
                        ind = i;
                        break;
                    }
                }
                if (ind == -1) {
                    partAvailModel.addRow(new Object[]{p.getDesc(), p.getPrice(), p.getStock()});
                } else {
                    partAvailModel.setValueAt(p.getStock(), ind, 2);
                }
            } else {
                partAddedModel.removeRow(index);
                partList.add(partsAdded.get(index));
                partsAdded.remove(index);
            }
        }
        displayParts();
    }//GEN-LAST:event_tblStockAddedMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel lblPartsInStock;
    private javax.swing.JLabel lblPartsToAdd;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileAdd;
    private javax.swing.JMenuItem mnuFileCancel;
    private javax.swing.JMenuBar mnuParts;
    private javax.swing.JScrollPane scpStockAdded;
    private javax.swing.JScrollPane scpStockAvail;
    private javax.swing.JTable tblStockAdded;
    private javax.swing.JTable tblStockAvail;
    // End of variables declaration//GEN-END:variables

    private void loadParts() {
        try {
            partList = RepairDao.getParts();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void displayParts() {
        partAvailModel.setRowCount(0);
        for (int i = 0; i < partList.size(); i++) {
            Part p = partList.get(i);
            partAvailModel.insertRow(i, new Object[]{p.getDesc(), p.getPrice(), p.getStock()});
        }
    }
}
